// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

StaffType _$StaffTypeFromJson(Map<String, dynamic> json) {
  return StaffType(
    id: json['id'] as int,
    companyID: json['companyID'] as String,
    name: json['name'] as String,
    employeeDiscount: (json['employeeDiscount'] as num)?.toDouble(),
    colorCode: json['colorCode'] as String,
    description: json['description'] as String,
    isDeleted: json['isDeleted'] as bool,
    timeInterval: json['timeInterval'] as int,
    takeOrder: json['takeOrder'] as bool,
    openDrawer: json['openDrawer'] as bool,
    giftCardSell: json['giftCardSell'] as bool,
    certificateSell: json['certificateSell'] as bool,
    payout: json['payout'] as bool,
    voidOrders: json['voidOrders'] as bool,
    tipAdjust: json['tipAdjust'] as bool,
    tipAdjustBatchClose: json['tipAdjustBatchClose'] as bool,
    customerInfo: json['customerInfo'] as bool,
    accessSummary: json['accessSummary'] as bool,
    discountEmployee: json['discountEmployee'] as bool,
    creditCardOnly: json['creditCardOnly'] as bool,
    surcharge: json['surcharge'] as bool,
    rewardReload: json['rewardReload'] as bool,
    rewardRedeem: json['rewardRedeem'] as bool,
    acceptCash: json['acceptCash'] as bool,
    priceOverride: json['priceOverride'] as bool,
    reopenOrders: json['reopenOrders'] as bool,
    closeOut: json['closeOut'] as bool,
    closeOutHistory: json['closeOutHistory'] as bool,
    discountAll: json['discountAll'] as bool,
    tipAdjustRefund: json['tipAdjustRefund'] as bool,
    terminalSetting: json['terminalSetting'] as bool,
    viewAllTransactions: json['viewAllTransactions'] as bool,
    viewTransacions: json['viewTransacions'] as bool,
    voidTransactions: json['voidTransactions'] as bool,
    floorPlanEdit: json['floorPlanEdit'] as bool,
    changeServer: json['changeServer'] as bool,
    taxExempt: json['taxExempt'] as bool,
    houseComp: json['houseComp'] as bool,
    approveOT: json['approveOT'] as bool,
    removeLocks: json['removeLocks'] as bool,
    isForSelfOrderUser: json['isForSelfOrderUser'] as bool,
  );
}

Map<String, dynamic> _$StaffTypeToJson(StaffType instance) => <String, dynamic>{
      'id': instance.id,
      'companyID': instance.companyID,
      'name': instance.name,
      'employeeDiscount': instance.employeeDiscount,
      'colorCode': instance.colorCode,
      'description': instance.description,
      'isDeleted': instance.isDeleted,
      'timeInterval': instance.timeInterval,
      'takeOrder': instance.takeOrder,
      'openDrawer': instance.openDrawer,
      'giftCardSell': instance.giftCardSell,
      'certificateSell': instance.certificateSell,
      'payout': instance.payout,
      'voidOrders': instance.voidOrders,
      'tipAdjust': instance.tipAdjust,
      'tipAdjustBatchClose': instance.tipAdjustBatchClose,
      'customerInfo': instance.customerInfo,
      'accessSummary': instance.accessSummary,
      'discountEmployee': instance.discountEmployee,
      'creditCardOnly': instance.creditCardOnly,
      'surcharge': instance.surcharge,
      'rewardReload': instance.rewardReload,
      'rewardRedeem': instance.rewardRedeem,
      'acceptCash': instance.acceptCash,
      'priceOverride': instance.priceOverride,
      'reopenOrders': instance.reopenOrders,
      'closeOut': instance.closeOut,
      'closeOutHistory': instance.closeOutHistory,
      'discountAll': instance.discountAll,
      'tipAdjustRefund': instance.tipAdjustRefund,
      'terminalSetting': instance.terminalSetting,
      'viewTransacions': instance.viewTransacions,
      'viewAllTransactions': instance.viewAllTransactions,
      'voidTransactions': instance.voidTransactions,
      'floorPlanEdit': instance.floorPlanEdit,
      'changeServer': instance.changeServer,
      'taxExempt': instance.taxExempt,
      'houseComp': instance.houseComp,
      'approveOT': instance.approveOT,
      'removeLocks': instance.removeLocks,
      'isForSelfOrderUser': instance.isForSelfOrderUser,
    };
